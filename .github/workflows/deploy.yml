name: CI/CD Deploy via SSH

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch: {}

env:
  OWNER: ${{ github.repository_owner }}

jobs:
  build-and-push:
    name: Build and Push Images to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/frontend:latest
            ghcr.io/${{ env.OWNER }}/frontend:${{ github.sha }}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/backend:latest
            ghcr.io/${{ env.OWNER }}/backend:${{ github.sha }}

      - name: Build and push nginx server
        uses: docker/build-push-action@v6
        with:
          context: ./nginx
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/server:latest
            ghcr.io/${{ env.OWNER }}/server:${{ github.sha }}

  deploy:
    name: Deploy to Server via SSH
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' || github.ref_name == 'master' }}
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        env:
          OWNER: ${{ env.OWNER }}
          GHCR_USER: ${{ secrets.GHCR_USER }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
          DEPLOY_BRANCH: ${{ secrets.DEPLOY_BRANCH }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT || 22 }}
          key: ${{ secrets.SSH_KEY }}
          envs: OWNER,GHCR_USER,GHCR_TOKEN,REMOTE_DIR,DEPLOY_BRANCH,GITHUB_REPOSITORY
          script: |
            set -euo pipefail
            if [ -z "${REMOTE_DIR:-}" ]; then echo "REMOTE_DIR secret is required"; exit 1; fi
            if [ ! -d "$REMOTE_DIR/.git" ]; then
              mkdir -p "$REMOTE_DIR"
              git clone --depth=1 --branch "${DEPLOY_BRANCH:-main}" "https://github.com/${GITHUB_REPOSITORY}.git" "$REMOTE_DIR"
            fi
            cd "$REMOTE_DIR"
            git fetch --all --prune
            git checkout "${DEPLOY_BRANCH:-main}"
            git pull --ff-only
           
            docker login ghcr.io -u "$GHCR_USER" -p "$GHCR_TOKEN"
            docker compose pull
            docker compose up -d
            docker image prune -f

