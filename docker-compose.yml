services:
  database:
    image: postgres:16.4
    container_name: database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: films
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - internal


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - internal

  frontend:
    image: 'ghcr.io/${OWNER}/frontend:latest'
    build:
      context: frontend
    container_name: frontend
    environment:
      VITE_BASE_URL: /
      VITE_API_URL: http://backend:3000/api/afisha
      VITE_CDN_URL: http://backend:3000/content/afisha
    volumes:
      - frontend_build:/app/dist

  backend:
    image: 'ghcr.io/${OWNER}/backend:latest'
    build: 
      context: backend
    environment:
      PORT: 3000
      DEBUG: '*'
      DATABASE_DRIVER: 'postgres'
      DATABASE_URL: 'postgres://database:5432/postgres'
      DATABASE_USERNAME: ${DB_USER}
      DATABASE_PASSWORD: ${DB_PASSWORD}
    ports:
      - 3000:3000
    networks:
      - internal
    depends_on:
      - database


  server:
    image: 'ghcr.io/${OWNER}/server:latest'
    build: 
      context: nginx
    ports:
      - 80:80
    volumes:
      - frontend_build:/var/www
    depends_on:
      - frontend
      - backend
    networks:
      - internal

volumes:
  db_data:
  pgadmin-data:
  frontend_build:

networks:
  internal: